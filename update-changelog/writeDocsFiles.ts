import { ReleaseNotesBuilder } from './ReleaseNotesBuilder'
import fs from 'fs'

interface DocsReleaseNotesWriterOptions {
	version: string
	builder: ReleaseNotesBuilder
}

export async function writeDocsFiles({ version, builder }: DocsReleaseNotesWriterOptions) {
	const notes = await builder.buildReleaseNotes({ useDocsHeader: true })
	const title = builder.getTitle()

	const content = `+++
title = "${title}"
[_build]
list = false
+++

<!-- Auto generated by update changelog github action -->

${notes}
`
	const releaseNotesDocsPath = `./docs/sources/release-notes`
	const filePath = `release-notes-${version.replace(/\./g, '-')}.md`
	const fullPath = `${releaseNotesDocsPath}/${filePath}`

	fs.writeFileSync(fullPath, content, { encoding: 'utf-8' })

	const indexFilePath = `_index.md`
	const indexFileFullPath = `${releaseNotesDocsPath}/${indexFilePath}`
	const indexFileContent = fs.readFileSync(indexFileFullPath, 'utf8')
	const findLatestNotes = indexFileContent.indexOf('- [Release notes for')
	const updatedIndexFileContent =
		indexFileContent.slice(0, findLatestNotes) +
		`- [Release notes for ${version}]({{< relref "${filePath.replace('.md', '')}" >}})\n` +
		indexFileContent.slice(findLatestNotes)
	fs.writeFileSync(indexFileFullPath, updatedIndexFileContent, { encoding: 'utf8' })
}
